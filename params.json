{"name":"Sphinx Yii Component","tagline":"Yii component for work with Sphinx Search","body":"Yii Sphinx Component\r\n====================\r\n\r\nSimple and powerful component for work with Sphinx search engine.\r\n\r\nFeatures\r\n--------\r\n\r\n* Simple query methods\r\n* Extended ESphinxSearchCriteria for complex queries\r\n* Support packeted queries\r\n* Unit tests coverage\r\n\r\n\r\nConfigure\r\n----------\r\n\r\n```php\r\n'components' => array(\r\n    'sphinx' => array(\r\n        'server' => array('localhost', 3386),\r\n        'connectionTimeout' => 3, // optional, default 0 - no limit\r\n        'queryTimeout'      => 5, // optional, default 0 - no limit\r\n    ),\r\n),\r\n```\r\n\r\n\r\nHow to use\r\n----------\r\n\r\nAll component classes names begins with ESphinx.\r\nMain object we used for querying is ESphinxQuery.\r\n\r\nSimple query with text in all indexes:\r\n```php\r\nYii::app()->sphinx->executeQuery(new ESphinxQuery('Hello world!'));\r\n```\r\n\r\nQuery in index:\r\n```php\r\nYii::app()->sphinx->executeQuery(new ESphinxQuery('Hello world!'), 'blog');\r\n```\r\n\r\n\r\nExtended queries\r\n----------------\r\nOften we need search in index with some parametrs and options. For this task component has class ESphinxSearchCriteria.\r\nIt's very similar to CDbCriteria and has the same idea.\r\n\r\nSearch in article index with some parametrs:\r\n\r\n```php\r\n$criteria = new ESphinxSearchCriteria(array(\r\n    'sortMode' => ESphinxSort::EXTENDED,\r\n    'orders' => array(\r\n        'date_created' => 'DESC',\r\n        'date_updated' => 'ASC',\r\n    ),\r\n    'mathMode' => ESphinxMatch::EXTENDED,\r\n));\r\n\r\n$query = new ESphinxQuery('@(title,body) hello world', 'articles', $criteria);\r\n```\r\n\r\nCriteria can changing in work.\r\n```php\r\n$criteria = new ESphinxSearchCriteria(array('mathMode' => ESphinxMatch::EXTENDED));\r\n$criteria->addFilter('user_id', 1000); // add filter by user, we can use integer or integer array\r\n$criteria->addFilter('site_id', 123, false, 'site'); // add filter by site_id field with key value (will used later)\r\n\r\n// querying\r\n$result = Yii::app()->sphinx->executeQuery(new ESphinxQuery('', 'products', $criteria));\r\n\r\n// search same query by another site\r\n$criteria->addFilter('site_id', 321, false, 'site'); // change site_id param value\r\n\r\n// querying\r\n$result = Yii::app()->sphinx->executeQuery(new ESphinxQuery('', 'products', $criteria));\r\n\r\n// search same query but without site_id param\r\n$criteria->deleteFilter('site'); // delete filter on site_id field\r\n\r\n// querying....\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}